#!/bin/bash

set -o nounset

PROJECT=procfetch
VERSION="$(cat VERSION)"
CONFIG_BREW=OFF
CXX=g++
unset PREFIX
BIN_DIR=/bin
LIB_DIR=/share/procfetch


function show_usage {
    cat <<-EOF
	\`$0' configures $PROJECT $VERSION to adapt to many kinds of systems.

	Usage: $0 [OPTION]...

	Options:
	  -h, --help       display this help and exit.
	  -v, --versoin    display version information and exit.
	  --prefix=PREFIX  install files in PREFIX.
	  --with-cxx=CXX   use CXX to compile (default=gcc).

	Some influential environment variables:
	  CXX  C++ compiler command
EOF
    exit $1
}

#
# parse options
#

parsed_arguments=$(getopt -n $0 -o hv --long help,version,prefix:,with-cxx: -- "$@")
if [[ $? != 0 ]]; then
    show_usage 1
fi

eval set -- "$parsed_arguments"
while true; do
    case "$1" in
        -h | --help     ) help_option=1    ; shift   ;;
        -v | --version  ) version_option=1 ; shift   ;;
             --prefix   ) PREFIX="$2"      ; shift 2 ;;
             --with-cxx ) CXX="$2"         ; shift 2 ;;
        --) shift; break;;
        *) echo "Error: Unknown option: $1"
           show_usage 1;;
    esac
done

if [[ $# -ne 0 ]]; then
    echo "Error: Invalid argument: $@"
    show_usage 1
fi

#
# main process
#

if [[ -v help_option ]]; then
   show_usage 0
fi

if [[ -v version_option ]]; then
    echo "$PROJECT configure $VERSION"
    exit 0
fi

BIN_DIR="${PREFIX:-}${BIN_DIR}"
LIB_DIR="${PREFIX:-/usr}${LIB_DIR}"

for f in Makefile ascii/Makefile src/Makefile src/config.h Doxyfile
do
    echo "creating $f"
    sed -e "s/@VERSION@/${VERSION}/g" \
        -e "s/@CXX@/${CXX}/g" \
        -e "s:@BIN_DIR@:${BIN_DIR}:g" \
        -e "s:@LIB_DIR@:${LIB_DIR}:g" "$f.in" > "$f"
done
